# 토픽(TOPIC)

- 토픽은 ros에서 비동기식 통신을 위한 퍼블리셔-서브스크라이버 모델을 구현하는데 사용됨

- 노드는 특정 토픽에 메시지를 발행(publish)하거나, 특정 토픽을 구독(subscribe)하여 메시지를 수신할 수 있음.

- 주요 개념
    1. 퍼블리셔(publisher)
        - 퍼블리셔는 특정 토픽에 메시지를 발행하는 역할
        - 하나의 토픽에 여러 퍼블리셔가 있을 수 있음
        - 예) 센서 데이터 발행, 로봇 상태 업데이트

    2. 서브스크라이버(subscriber)
        - 서브스크라이버는 특정 토픽을 구독하여 메시지를 수신하는 역할을 함
        - 하나의 토픽에 여러 서브스크라이버가 있을 수 있ㅇ음
        - 예) 센서 데이터 처리, 로봇 제어 명령 수신

    3. 토픽 이름
        - 토픽은 고유한 이름으로 식별됨.
        - 이름을 통해 퍼블리셔와 서브스크라이버가 동일한 데이터 스트림을 공유할 수 있음
        - 예) /camera/image, /cmd_vel

- 다른 기기간 토픽 발행, 구독
    1. 다른 기기간 ros 네트워크 설정을하여 서로 통신할 수 있도록 해야함.
        1) 네트워크 설정
        2) 환경변수 설정
        3) 퍼블리셔 노드 실행
        4) 서브스크라이버 노드 실행

    2. 네트워크 설정
        - 두 기기가 같은 네트워크에 있어야함

    3. 환경 변수 설정
        - 두 기기간의 통신을 위해 ros 환경 변수를 설정해야함.
        - 주로 설정해야하는 변수는 ros_master_uri와 ros_ip임.
    
    4. 예시
        - pc와 sbc가 같은 와이파이에 연결되어있고 pc ip 는 192.168.0.20, sbc ip 는 192.168.0.40이라 가정
        - pc 
            nano ~/.bashrc
            export ROS_MASTER_URI=http://192.168.0.20:11311
            export ROS_IP=192.168.0.20
            source ~/.bashrc
        - sbc
            nano ~/.bashrc
            export ROS_MASTER_URI=http://192.168.0.20:11311
            export ROS_IP=192.168.0.40
            source ~/.bashrc

    5. 그 후 각자 퍼블리셔, 서브스크라이버 코드 실행
